package Test::ClassC::Plugin::Writer;

use v5.38;
use lib './lib';
use lib './t';

use Test::Data::Example::1::Out qw(
    $OBJECT
    $BIRD
    $CAR
);
use Test::IO qw(
    get_file_contents
);
require ClassC::Plugin::Writer;

use Test::More tests => 1;

my ($writer, $expected);

$writer = ClassC::Plugin::Writer->new(output_dir => 'example/1/out');
$writer->write({
  output_dir => 'example/1/out',
  classes    => {
    'Object' => $OBJECT,
    'Bird'   => $BIRD,
    'Car'    => $CAR,
  },
});

$expected = <<~CODE;
    /*
     * Class Object
     * Generated by ClassC.
     */

    #include <stdbool.h>

    typedef struct Object Object;

    /* Vtable */
    struct Object_Vtable_ {
      int (*hash)();
      bool (*equals)(void *other);
      char* (*to_string)();
    };

    /* Instance */
    struct Object {
      struct Object_Vtable_* _vtable_;
    };

    /* Functions */
    int Object_hash();
    bool Object_equals(void *other);
    char* Object_to_string();

    /* Vtable Instance */
    const struct Object_Vtable_ Object_vtable_ = {
      .hash = Object_hash,
      .equals = Object_equals,
      .to_string = Object_to_string,
    };
    CODE

is_deeply(get_file_contents('example/1/out/Object.h'), $expected);
